dev.off()
}
save_cells(cell_0011)
2+6+4+2+4
4+6+4+4+2
5 - (12)
2+2+4+1
graphics.off()
# cell outline
png("cell_o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
# polygon(sq_x, sq_y, col = rgb(1, 1, 1, 0))
dev.off()
graphics.off()
# cell outline
png("cell_o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
dev.off()
graphics.off()
graphics.off()
png("cell_o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
# polygon(sq_x, sq_y, col = rgb(1, 1, 1, 0))
dev.off()
png("cell_o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
# polygon(sq_x, sq_y, col = rgb(1, 1, 1, 0))
dev.off()
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
png("cell_o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=line_width)
dev.off()
graphics.off()
png("o0000.png")
blank_plot()
abline(h=c(0,1), v=c(0,1), lwd=1)
# polygon(sq_x, sq_y, col = rgb(1, 1, 1, 0))
dev.off()
source('C:/Dropbox/Cell Division Web Game/images/cell_maker.R')
dev.off()
# [+/]
cell_1101 <- function(colorname) {
color <- eval(get(colorname))
png(paste0( substr(colorname, 5, 5), "1101.png"))
blank_plot()
plot_cell(sm_sq_x, sm_sq_y+0.5, color) # top left
plot_cell(sm_sq_x+0.5, sm_sq_y, color) # bot right
plot_cell(sm_tri_x, 0.5-sm_tri_y, color) # bot left
plot_cell(0.5-sm_tri_x, sm_tri_y, color) # bot left
plot_cell(sm_tri_x+0.5, 1-sm_tri_y, color) # top right
plot_cell(1-sm_tri_x, sm_tri_y+0.5, color) # top right
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
abline(h=0.5, v=0.5, lwd=line_width)
lines(c(0,1), c(0,1), lwd=line_width)
dev.off()
}
save_cells(cell_1101)
# [+x]
cell_1111 <- function(colorname) {
color <- eval(get(colorname))
png(paste0( substr(colorname, 5, 5), "1111.png"))
blank_plot()
# right
plot_cell(sm_tri_x+0.5, 1-sm_tri_y, color)
plot_cell(sm_tri_x+0.5, sm_tri_y, color)
# bot
plot_cell(sm_tri_x, 0.5-sm_tri_y, color)
plot_cell(1-sm_tri_x, 0.5-sm_tri_y, color)
# left
plot_cell(0.5-sm_tri_x, 1-sm_tri_y, color)
plot_cell(0.5-sm_tri_x, sm_tri_y, color)
# top
plot_cell(sm_tri_x, 0.5+sm_tri_y, color)
plot_cell(1-sm_tri_x, 0.5+sm_tri_y, color)
# lines
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
abline(h=0.5, v=0.5, lwd=line_width)
lines(c(0,1, NA, 0,1), c(1,0, NA, 0,1), lwd=line_width)
dev.off()
}
save_cells(cell_1111)
source('~/GitHub/mattmotoki/images/small_cell_maker.R')
source('~/GitHub/mattmotoki/images/small_cell_maker.R')
source("cell_plot_utils.R")
line_width <- 3
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# rectangular cell
rect_x <- sq_x - 0.5*(sq_x>0.5)
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- quad_outline[, 1]+0.5
quad_y <- quad_outline[, 2]+0.5
png("difficulty_easy.png")
blank_plot()
plot_cell(sq_x, sq_y, cellblue)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(sq_x, sq_y, cellfuscia)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sq_x, sq_y, cellred)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_easy.png")
blank_plot()
plot_cell(sq_x, sq_y, cellblue)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(rect_x, sq_y, cellfuscia)
plot_cell(rect_x+0.5, sq_y, cellfuscia)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellred)
plot_cell(sm_sq_x, sm_sq_y+0.5, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellred)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
source("cell_plot_utils.R")
line_width <- 3
w = 120
h = 120
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# rectangular cell
rect_x <- sq_x - 0.5*(sq_x>0.5)
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- quad_outline[, 1]+0.5
quad_y <- quad_outline[, 2]+0.5
graphics.off()
#------------------
# difficulty
png("difficulty_easy.png")
blank_plot()
plot_cell(sq_x, sq_y, cellblue)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(rect_x, sq_y, cellfuscia)
plot_cell(rect_x+0.5, sq_y, cellfuscia)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellred)
plot_cell(sm_sq_x, sm_sq_y+0.5, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellred)
abline(h=c(0,1), v=c(0,1), lwd=line_width/2)
dev.off()
png("difficulty_easy.png")
blank_plot()
plot_cell(sq_x, sq_y, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(rect_x, sq_y, cellfuscia)
plot_cell(rect_x+0.5, sq_y, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellred)
plot_cell(sm_sq_x, sm_sq_y+0.5, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellred)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellred)
dev.off()
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
dev.off()
graphics.off()
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
dev.off()
png("difficulty_easy.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellred)
dev.off()
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, color)
plot_cell(sm_sq_x, sm_sq_y+0.5, color)
graphics.off()
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
dev.off()
png("size_medium.png")
blank_plot()
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellyellow)
dev.off()
png("size_larger.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellyellow)
dev.off()
blank_plot()
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
graphics.off()
#------------------
# difficulty
png("difficulty_easy.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellred)
dev.off()
#------------------
# board size
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
dev.off()
png("size_medium.png")
blank_plot()
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellyellow)
dev.off()
png("size_larger.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.5, cellyellow)
dev.off()
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellblue)
dev.off()
graphics.off()
#------------------
# difficulty
png("difficulty_easy.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellred)
dev.off()
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
blank_plot()
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.5, cellyellow)
graphics.off()
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
dev.off()
png("size_medium.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y+0.25, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.25, cellyellow)
dev.off()
png("size_larger.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.5, cellyellow)
dev.off()
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.5, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.45, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.475, cellyellow)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.475, cellyellow)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.4725, cellyellow)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.47125, cellyellow)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.4712, cellyellow)
graphics.off()
png("size_small.png")
blank_plot()
plot_cell(sm_sq_x+0.25, sm_sq_y+0.25, cellyellow)
dev.off()
png("size_medium.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y+0.25, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.25, cellyellow)
dev.off()
png("size_larger.png")
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.4712, cellyellow)
dev.off()
graphics.off()
#------------------
# difficulty
png("cell_icon.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellyellow)
dev.off()
graphics.off()
#------------------
# difficulty
png("cell_icon.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellgreen)
dev.off()
source("cell_plot_utils.R")
line_width <- 3
w = 120
h = 120
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# rectangular cell
rect_x <- sq_x - 0.5*(sq_x>0.5)
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- quad_outline[, 1]+0.5
quad_y <- quad_outline[, 2]+0.5
graphics.off()
#------------------
# difficulty
png("cell_icon.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellgreen)
dev.off()
png("difficulty_easy.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellred)
dev.off()
source("cell_plot_utils.R")
line_width <- 3
w = 60
h = 60
#------------------
# cell definitions
# square cell
sq_outline <- square_cell(0.2, 100)
sq_x <- sq_outline[, 1] + 0.5
sq_y <- sq_outline[, 2] + 0.5
# rectangular cell
rect_x <- sq_x - 0.5*(sq_x>0.5)
# small square cell
sm_sq_outline <- square_cell(0.4, 100)
sm_sq_x <- 0.5*(sm_sq_outline[, 1] + 0.5)
sm_sq_y <- 0.5*(sm_sq_outline[, 2] + 0.5)
# trianglular cell
tri_outline <- triangular_cell(0.3, 0.1, n_pnts)
tri_x <- tri_outline[, 1]+0.5
tri_y <- tri_outline[, 2]+0.5
# side trianglular cell
side_tri_outline <- side_triangular_cell(0.1, 0.3, n_pnts)
side_tri_x <- side_tri_outline[, 1]+0.5
side_tri_y <- side_tri_outline[, 2]+0.5
# small trianglular cell
sm_tri_outline <- triangular_cell(0.3, 0.2, n_pnts)
sm_tri_x <- 0.5*(sm_tri_outline[, 1]+0.5)
sm_tri_y <- 0.5*(sm_tri_outline[, 2]+0.5)
# quadrilateral cell
quad_outline <- quad_cell(0.2, 0.1, n_pnts)
quad_x <- quad_outline[, 1]+0.5
quad_y <- quad_outline[, 2]+0.5
graphics.off()
#------------------
# difficulty
png("cell_icon.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellgreen)
dev.off()
png("difficulty_easy.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellblue)
dev.off()
png("difficulty_medium.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellfuscia)
dev.off()
png("difficulty_hard.png")
blank_plot()
plot_cell(2*sm_sq_x, 2*sm_sq_y, cellred)
dev.off()
source('~/GitHub/mattmotoki.github.io/images/button_maker.R')
source('~/GitHub/mattmotoki.github.io/images/button_maker.R')
png("size_large.png", width=w, height=h)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y+0.4712, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y+0.4712, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y, cellyellow)
dev.off()
png("size_large.png", width=w, height=h)
blank_plot()
plot_cell(sm_sq_x, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.5, sm_sq_y, cellyellow)
plot_cell(sm_sq_x+0.25, sm_sq_y+0.4712, cellyellow)
dev.off()
