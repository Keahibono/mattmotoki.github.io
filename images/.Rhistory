alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.95, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.5*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.95, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.7*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.5*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 50
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)*0.5
color <- 0.5*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
shrink <- seq(0.25, 0.85, length=n_layers)^2
shrink
shrink <- seq(0.25, 0.875, length=n_layers)^2
shrink
source('~/GitHub/mattmotoki.github.io/images/cell_plot_utils.R', echo=TRUE)
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 50
shrink <- seq(0.25, 0.875, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)*0.5
color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
n_layers <- 25
shink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.5*color
source('C:/Dropbox/test/test_cells.R', echo=TRUE)
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 25
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)
color <- 0.5*color
# n_layers <- 50
# shrink <- seq(0.25, 0.875, length=n_layers)^2
# alpha <- seq(0.01, 0.05, length=n_layers)*0.5
# color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 50
shrink <- seq(0.25, 0.85, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)*0.5
color <- 0.5*color
# n_layers <- 50
# shrink <- seq(0.25, 0.875, length=n_layers)^2
# alpha <- seq(0.01, 0.05, length=n_layers)*0.5
# color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
library(png)
# plotting parameters
n_pnts <- 100
cellgreen <- c(34/255,250/255,34/255)
cellred <- c(255/255,60/255,0/255)
cellfuscia <- c(230/255,54/255,230/255)
cellblue <- c(34/255,142/255,250/255)
cellyellow <- c(255/255,255/255,0/255)
sm_sq_outline <- squareCell(0.4, 100)
x <- 0.5*(sm_sq_outline[, 1] + 0.5)
y <- 0.5*(sm_sq_outline[, 2] + 0.5)
sigmoid <- function(x) { 1 / (1 + exp(-x)) }
#------------------------------------------------------
# plotCell
plotCell <- function(x, y, color, shrinkage=2) {
# start with all black cell
polygon(x, y, col="black", border=NA)
# get center of mass
centroid <- centroidCalc(x, y)
# add shadow
n_layers <- 250
shrink <- seq(1, 0, length=n_layers)^shrinkage
alpha <- seq(0.09, 1, length=n_layers)
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
# add dimple
n_layers <- 50
shrink <- seq(0.25, 0.9, length=n_layers)^2
alpha <- seq(0.01, 0.05, length=n_layers)*0.5
color <- 0.5*color
# n_layers <- 50
# shrink <- seq(0.25, 0.875, length=n_layers)^2
# alpha <- seq(0.01, 0.05, length=n_layers)*0.5
# color <- 0.6*color
for (k in 1:n_layers) {
polygon(shrink[k]*(x-centroid[1])+centroid[1],
shrink[k]*(y-centroid[2])+centroid[2],
col=rgb(color[1], color[2], color[3], alpha[k]),
border=NA)
}
}
cell_1001 <- function(colorname) {
color <- eval(get(colorname))
blankPlot()
plotCell(1-quad_x, quad_y, color, 1.5)
plotCell(quad_x, 1-quad_y, color, 1.5)
plotCell(1-sm_tri_x, sm_tri_y+0.5, color, 2.75)
plotCell(sm_tri_x, 0.5-sm_tri_y, color, 2.75)
}
cell_1001("cellblue")
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
source('~/GitHub/mattmotoki.github.io/images/cell_maker.R', echo=TRUE)
